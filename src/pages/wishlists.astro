---
import { getBasePath } from '../lib/paths';
import Layout from '../components/Layout.astro';
import AuthenticatedForm from '../components/AuthenticatedForm.tsx';

// Check authentication
const user = Astro.locals.user;

// We'll fetch wishlists client-side from our API endpoint
const basePath = getBasePath();

const statusColors = {
  'Open': 'bg-gray-100 text-gray-800',
  'In Progress': 'bg-gray-200 text-gray-900',
  'Review': 'bg-gray-300 text-gray-900',
  'Funded': 'bg-gray-400 text-white',
  'Completed': 'bg-gray-700 text-white',
  'On Hold': 'bg-gray-500 text-white',
};

const urgencyColors = {
  low: 'bg-gray-100 text-gray-700',
  medium: 'bg-gray-200 text-gray-800', 
  high: 'bg-gray-600 text-white',
  critical: 'bg-gray-800 text-white'
};
---

<Layout title="Browse Project Wishlists - OSS Wishlist" description="Discover open source projects seeking support. Find opportunities to sponsor, contribute, or provide services to maintainers.">
  <AuthenticatedForm client:load user={user}>
  <!-- Compact Hero & Filters Section -->
  <section class="bg-gradient-to-br from-gray-100 to-gray-200 py-8 border-b">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <!-- Header -->
      <div class="mb-6">
        <h1 class="text-4xl font-bold text-gray-900 mb-2">
          Project Wishlists
        </h1>
        <p class="text-gray-600 max-w-2xl">
          Browse open source maintainers seeking support. <a href={`${basePath}/maintainers`} class="text-gray-700 underline hover:text-gray-900">Create your wishlist</a>
        </p>
      </div>
      
      <!-- Search & Filter Inline -->
      <div class="grid md:grid-cols-12 gap-4 items-center">
        <!-- Search Bar -->
        <div class="md:col-span-5">
          <div class="relative">
            <input 
              type="text" 
              id="searchInput"
              placeholder="Search projects..."
              class="w-full px-4 py-2.5 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-gray-500 focus:border-gray-500 pl-10"
            />
            <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
            </svg>
          </div>
        </div>
        
        <!-- Quick Filters -->
        <div class="md:col-span-4 flex flex-wrap gap-2">
          <button class="px-3 py-1.5 text-sm bg-white border rounded-lg hover:bg-gray-50 transition-colors">All</button>
          <button class="px-3 py-1.5 text-sm bg-white border rounded-lg hover:bg-gray-50 transition-colors">High Urgency</button>
        </div>
        
        <!-- Dropdowns -->
        <div class="md:col-span-3 flex gap-2">
          <select class="flex-1 px-3 py-2 text-sm bg-white border rounded-lg">
            <option>All Tech</option>
            <option>JavaScript</option>
            <option>Python</option>
            <option>Rust</option>
          </select>
          <select class="flex-1 px-3 py-2 text-sm bg-white border rounded-lg">
            <option>Recent</option>
            <option>Popular</option>
            <option>Urgent</option>
          </select>
        </div>
      </div>
      
      <!-- Stats Bar -->
      <div class="mt-4 flex items-center justify-between text-sm text-gray-600">
        <div class="flex gap-6">
          <span><strong id="wishlist-count" class="text-gray-900">Loading...</strong> active wishlists</span>
          <span><strong id="technologies-count" class="text-gray-900">0</strong> technologies</span>
        </div>
        <div id="searchResults" class="hidden">
          <span id="resultCount">0</span> project(s) found
        </div>
      </div>
    </div>
  </section>

  <!-- Wishlists Grid -->
  <section class="py-8 bg-white">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <!-- No Results Message -->
      <div id="noResults" class="text-center py-12 hidden">
        <svg class="mx-auto h-12 w-12 text-gray-400 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 12h6m-6-4h6m2 5.291A7.962 7.962 0 0112 20a7.962 7.962 0 01-5-1.709M15 17a2 2 0 11-4 0 2 2 0 014 0z"></path>
        </svg>
        <h3 class="text-lg font-medium text-gray-900 mb-2">No projects found</h3>
        <p class="text-gray-600">Try adjusting your search terms</p>
      </div>

      <div id="wishlistsGrid" class="grid md:grid-cols-2 lg:grid-cols-3 gap-6" data-base-path={basePath}>
        <!-- Loading state -->
        <div id="loading" class="col-span-full text-center py-12">
          <div class="animate-spin rounded-full h-10 w-10 border-b-2 border-gray-600 mx-auto mb-3"></div>
          <p class="text-sm text-gray-600">Loading wishlists...</p>
        </div>
        
        <!-- Wishlists will be populated by JavaScript -->
      </div>
    </div>
  </section>

  <!-- CTA Section -->
  <section class="py-16 bg-gray-600">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
      <h2 class="text-3xl font-bold text-white mb-4">Have a Project That Needs Support?</h2>
      <p class="text-xl text-gray-200 mb-8">Create your wishlist and connect with supporters who want to help</p>
      <div class="flex justify-center space-x-4">
        <a href={`${basePath}/maintainers`} class="bg-white text-gray-600 px-8 py-3 rounded-lg font-semibold hover:bg-gray-100 transition-colors">
          Create Your Wishlist
        </a>
        <a href={`${basePath}/maintainers`} class="border border-gray-300 text-white px-8 py-3 rounded-lg font-semibold hover:bg-gray-700 transition-colors">
          Learn More
        </a>
      </div>
    </div>
  </section>
  </AuthenticatedForm>

<script>
  // Wishlist data
  let allWishlists = [];
  let basePath = '';
  
  // Status colors mapping
  const statusColors = {
    'Open': 'bg-gray-100 text-gray-800',
    'In Progress': 'bg-gray-200 text-gray-900',
    'Review': 'bg-gray-300 text-gray-900',
    'Funded': 'bg-gray-400 text-white',
    'Completed': 'bg-gray-700 text-white',
    'On Hold': 'bg-gray-500 text-white',
  };

  const urgencyColors = {
    low: 'bg-gray-100 text-gray-700',
    medium: 'bg-gray-200 text-gray-800', 
    high: 'bg-gray-600 text-white',
    critical: 'bg-gray-800 text-white'
  };

  // Fetch wishlists from GitHub
  async function fetchWishlists() {
    try {
      const grid = document.getElementById('wishlistsGrid');
      basePath = grid?.dataset.basePath || '';
      // Remove trailing slash if present to avoid double slashes
      const cleanBasePath = basePath.replace(/\/$/, '');
      const apiUrl = `${cleanBasePath}/api/wishlists`;
      
      const response = await fetch(apiUrl);
      
      if (!response.ok) {
        const errorData = await response.json().catch(() => ({}));
        throw new Error(errorData.error || `HTTP ${response.status}: Failed to fetch wishlists`);
      }
      
      const data = await response.json();
      allWishlists = data;
      
      // Update stats
      document.getElementById('wishlist-count').textContent = allWishlists.length;
      
      // Count unique technologies
      const allTechnologies = new Set();
      allWishlists.forEach(wishlist => {
        if (wishlist.technologies && Array.isArray(wishlist.technologies)) {
          wishlist.technologies.forEach(tech => {
            if (tech && tech.trim()) {
              allTechnologies.add(tech.trim().toLowerCase());
            }
          });
        }
      });
      document.getElementById('technologies-count').textContent = allTechnologies.size;
      
      // Display wishlists
      displayWishlists(allWishlists);
      
    } catch (error) {
      console.error('[fetchWishlists] Error:', error);
      document.getElementById('loading').innerHTML = `
        <div class="text-center py-12">
          <svg class="mx-auto h-12 w-12 text-gray-400 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
          <h3 class="text-lg font-medium text-gray-900 mb-2">Error loading wishlists</h3>
          <p class="text-gray-600">Unable to fetch data from GitHub. Please try again later.</p>
          <p class="text-sm text-gray-500 mt-2">${error instanceof Error ? error.message : String(error)}</p>
        </div>
      `;
    }
  }

  // Display wishlists
  function displayWishlists(wishlists) {
    const grid = document.getElementById('wishlistsGrid');
    const loading = document.getElementById('loading');
    
    if (loading) {
      loading.remove();
    }
    
    if (wishlists.length === 0) {
      grid.innerHTML = `
        <div class="col-span-full text-center py-12">
          <svg class="mx-auto h-12 w-12 text-gray-400 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5.291A7.962 7.962 0 0112 20a7.962 7.962 0 01-5-1.709M15 17a2 2 0 11-4 0 2 2 0 014 0z"></path>
          </svg>
          <h3 class="text-lg font-medium text-gray-900 mb-2">No wishlists found</h3>
          <p class="text-gray-600">No open wishlist issues found on GitHub.</p>
        </div>
      `;
      return;
    }
    
    try {
      grid.innerHTML = wishlists.map(wishlist => createWishlistCard(wishlist)).join('');
    } catch (error) {
      console.error('[displayWishlists] Error creating cards:', error);
      grid.innerHTML = `
        <div class="col-span-full text-center py-12">
          <h3 class="text-lg font-medium text-gray-900 mb-2">Error displaying wishlists</h3>
          <p class="text-gray-600 text-sm">${error.message}</p>
        </div>
      `;
    }
  }

  // Create wishlist card HTML
  function createWishlistCard(wishlist) {
    const statusColorClass = statusColors[wishlist.status] || 'bg-gray-100 text-gray-800';
    const urgencyColorClass = urgencyColors[wishlist.urgency] || 'bg-gray-100 text-gray-800';
    
    return `
      <div class="wishlist-card bg-white border rounded-lg shadow-sm hover:shadow-md transition-shadow p-6" data-title="${wishlist.title.toLowerCase()}" data-maintainer="${wishlist.maintainerName.toLowerCase()}">
        <!-- Project Header -->
        <div class="flex items-start justify-between mb-4">
          <div class="flex items-center space-x-3">
            <img src="${wishlist.author.avatar_url}" alt="${wishlist.author.login}" class="w-10 h-10 rounded-full" />
            <div>
              <div class="flex items-center gap-2">
                <h3 class="text-lg font-semibold text-gray-900">${wishlist.projectTitle}</h3>
                ${wishlist.repositoryUrl ? `
                  <a href="${wishlist.repositoryUrl}" target="_blank" rel="noopener noreferrer" class="text-gray-600 hover:text-gray-900" title="View project repository">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="2" aria-label="Project repository link">
                      <path stroke-linecap="round" stroke-linejoin="round" d="M13.19 8.688a4.5 4.5 0 011.242 7.244l-4.5 4.5a4.5 4.5 0 01-6.364-6.364l1.757-1.757m13.35-.622l1.757-1.757a4.5 4.5 0 00-6.364-6.364l-4.5 4.5a4.5 4.5 0 001.242 7.244" />
                    </svg>
                  </a>
                ` : ''}
              </div>
              <p class="text-sm text-gray-600">@${wishlist.maintainerName}</p>
            </div>
          </div>
          <div class="flex flex-col space-y-1">
            <span class="px-2 py-1 text-xs rounded-full ${statusColorClass}">
              ${wishlist.status}
            </span>
            <span class="px-2 py-1 text-xs rounded-full ${urgencyColorClass}">
              ${wishlist.urgency} priority
            </span>
          </div>
        </div>

        <!-- Services Needed -->
        <div class="mb-4">
          <h4 class="font-medium text-gray-900 mb-2">Looking for:</h4>
          <ul class="text-sm text-gray-600 space-y-1">
            ${wishlist.wishes.slice(0, 3).map(wish => `
              <li class="flex items-start">
                <span class="text-gray-600 mr-2">•</span>
                ${wish}
              </li>
            `).join('')}
            ${wishlist.wishes.length > 3 ? `
              <li class="text-gray-600 text-xs">+ ${wishlist.wishes.length - 3} more...</li>
            ` : ''}
          </ul>
        </div>

        <!-- Labels -->
        <div class="flex flex-wrap gap-2 mb-4">
          ${wishlist.labels.map(label => `
            <span class="px-2 py-1 text-xs rounded" style="background-color: #${label.color}20; color: #${label.color};">
              ${label.name}
            </span>
          `).join('')}
        </div>

        <!-- Actions -->
        <div class="flex items-center justify-between pt-4 border-t">
          <div class="flex space-x-2">
            <a 
              href="${wishlist.wishlistUrl || `${basePath}/fulfill?issue=${wishlist.id}`}"
              class="bg-gray-900 text-white px-4 py-2 rounded text-sm hover:bg-gray-800 transition-colors"
            >
              Fulfill this wish
            </a>
            <a 
              href="${wishlist.url}"
              target="_blank"
              rel="noopener noreferrer"
              class="bg-gray-100 text-gray-700 px-4 py-2 rounded text-sm hover:bg-gray-200 transition-colors"
            >
              View on GitHub
            </a>
          </div>
          <span class="text-xs text-gray-500">
            Issue #${wishlist.id}
          </span>
        </div>
      </div>
    `;
  }

  // Search functionality
  function performSearch() {
    const searchInput = document.getElementById('searchInput');
    const searchResults = document.getElementById('searchResults');
    const searchTerm = document.getElementById('searchTerm');
    const resultCount = document.getElementById('resultCount');
    const noResults = document.getElementById('noResults');
    
    const query = searchInput.value.toLowerCase().trim();
    
    if (query === '') {
      // Show all wishlists
      displayWishlists(allWishlists);
      searchResults.classList.add('hidden');
      noResults.classList.add('hidden');
      return;
    }
    
    // Filter wishlists based on search
    const filteredWishlists = allWishlists.filter(wishlist => 
      wishlist.title.toLowerCase().includes(query) ||
      wishlist.projectTitle.toLowerCase().includes(query) ||
      wishlist.maintainerName.toLowerCase().includes(query) ||
      wishlist.wishes.some(wish => wish.toLowerCase().includes(query))
    );
    
    // Update search results info
    searchTerm.textContent = query;
    resultCount.textContent = filteredWishlists.length;
    searchResults.classList.remove('hidden');
    
    if (filteredWishlists.length === 0) {
      noResults.classList.remove('hidden');
      document.getElementById('wishlistsGrid').innerHTML = '';
    } else {
      noResults.classList.add('hidden');
      displayWishlists(filteredWishlists);
    }
  }

  // Initialize on page load
  document.addEventListener('DOMContentLoaded', function() {
    // Fetch wishlists
    fetchWishlists();
    
    // Set up search
    const searchInput = document.getElementById('searchInput');
    let searchTimeout;
    
    searchInput.addEventListener('input', function() {
      clearTimeout(searchTimeout);
      searchTimeout = setTimeout(performSearch, 300);
    });
  });
</script>
</Layout>