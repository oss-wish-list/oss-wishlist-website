---
import { getBasePath } from '../lib/paths';
const basePath = getBasePath();
import Layout from '../components/Layout.astro';
import { getCollection } from 'astro:content';

const services = await getCollection('services');
---

<Layout title="Services & Resources - OSS Wishlist" description="Browse all available services and resources for open source projects">
  <section class="py-16 bg-gray-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-12">
        <h1 class="text-5xl font-bold text-gray-900 mb-6">Services & Resources</h1>
        <p class="text-xl text-gray-600 max-w-3xl mx-auto">
          Each service addresses a critical capability for project and community sustainability. They build on peer-validated frameworks and metrics from open source communities and foundations. Our playbooks and rubrics are openly licensed and welcome contributions. Resources are dependant on technology need and availability.
        </p>
      </div>

      <!-- Type Filter -->
      <div class="mb-8 text-center">
        <div class="flex flex-wrap justify-center gap-2">
          <button class="type-filter-btn active px-6 py-3 rounded-lg text-sm font-medium bg-gray-600 text-white" 
                  data-type="all">
            All
          </button>
          <button class="type-filter-btn px-6 py-3 rounded-lg text-sm font-medium bg-white text-gray-700 border hover:bg-gray-50" 
                  data-type="service">
            Services
          </button>
          <button class="type-filter-btn px-6 py-3 rounded-lg text-sm font-medium bg-white text-gray-700 border hover:bg-gray-50" 
                  data-type="resource">
            Resources
          </button>
        </div>
      </div>

      <!-- Services Grid -->
      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8" id="services-grid">
        {services.map((service) => (
          <div class="service-card bg-white p-6 rounded-lg shadow-sm border hover:shadow-md transition-shadow" 
               data-type={service.data.type}>
            <div class="flex justify-between items-start mb-4">
              <div>
                <h3 class="text-xl font-semibold text-gray-900">
                  {service.data.title}
                </h3>
                <div class="flex items-center gap-2 mt-1">
                  <span class={`inline-block px-2 py-1 text-xs font-medium rounded-full ${
                    service.data.type === 'resource' 
                      ? 'bg-gray-200 text-gray-800' 
                      : 'bg-gray-100 text-gray-700'
                  }`}>
                    {service.data.type === 'resource' ? 'Resource' : 'Service'}
                  </span>
                  {service.data.available === false && (
                    <span class="inline-block px-2 py-1 text-xs font-medium bg-gray-300 text-gray-700 rounded-full">
                      Currently Unavailable
                    </span>
                  )}
                </div>
              </div>
            </div>
            
            <p class="text-gray-600 mb-4">
              {service.data.description}
            </p>
            
            {service.data.available === false && service.data.unavailable_reason && (
              <p class="text-xs text-gray-500 italic mb-4">{service.data.unavailable_reason}</p>
            )}

            <div class="pt-4 border-t">
              {service.data.available ? (
                <a href={`${basePath}/services/${service.slug}`} 
                   class="text-gray-600 font-medium hover:text-gray-700">
                  Learn more →
                </a>
              ) : (
                service.data.type === 'resource' ? (
                  <span class="text-sm text-gray-500 italic">Funding needed</span>
                ) : (
                  <a href={`${basePath}/apply-practitioner`}
                     class="text-sm text-gray-700 hover:text-gray-900 font-medium">
                    Practitioners needed →
                  </a>
                )
              )}
            </div>
          </div>
        ))}
      </div>

      <!-- Call to Action -->
      <div class="text-center mt-16">
        <div class="bg-white p-8 rounded-lg shadow-sm border">
          <h2 class="text-2xl font-bold text-gray-900 mb-4">
            Ready to get help for your project?
          </h2>
          <p class="text-gray-600 mb-6">
            Create a wishlist with the services you need and share it with your community
          </p>
          <a href={`${basePath}/maintainers`} 
             class="bg-gray-900 text-white px-8 py-3 rounded-lg font-semibold hover:bg-gray-800 transition-colors">
            Create Your Wishlist
          </a>
        </div>
      </div>
    </div>
  </section>
</Layout>

<script>
  // Type filtering only
  document.addEventListener('DOMContentLoaded', function() {
    const typeFilterButtons = document.querySelectorAll('.type-filter-btn');
    const serviceCards = document.querySelectorAll('.service-card');
    
    let currentType = 'all';

    function filterCards() {
      serviceCards.forEach(card => {
        const cardType = card.getAttribute('data-type');
        const typeMatch = currentType === 'all' || cardType === currentType;
        
        if (typeMatch) {
          card.style.display = 'block';
        } else {
          card.style.display = 'none';
        }
      });
    }

    // Type filtering
    typeFilterButtons.forEach(button => {
      button.addEventListener('click', () => {
        currentType = button.getAttribute('data-type');
        
        // Update active button
        typeFilterButtons.forEach(btn => {
          btn.classList.remove('active', 'bg-gray-600', 'text-white');
          btn.classList.add('bg-white', 'text-gray-700');
        });
        button.classList.add('active', 'bg-gray-600', 'text-white');
        button.classList.remove('bg-white', 'text-gray-700');
        
        filterCards();
      });
    });
  });
</script>