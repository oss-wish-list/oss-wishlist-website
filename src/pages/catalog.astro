---
import Layout from '../components/Layout.astro';
import { getCollection } from 'astro:content';

const services = await getCollection('services');
const allTags = [...new Set(services.flatMap(service => service.data.tags))];
---

<Layout title="Services & Resources - OSS Wishlist" description="Browse all available services and resources for open source projects">
  <section class="py-16 bg-gray-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-12">
        <h1 class="text-4xl font-bold text-gray-900 mb-4">Services & Resources</h1>
        <p class="text-xl text-gray-600 max-w-3xl mx-auto">
          Professional services and technology resources designed specifically for open source project needs
        </p>
      </div>

      <!-- Type Filter -->
      <div class="mb-6 text-center">
        <div class="flex flex-wrap justify-center gap-2">
          <button class="type-filter-btn active px-6 py-3 rounded-lg text-sm font-medium bg-blue-600 text-white" 
                  data-type="all">
            All
          </button>
          <button class="type-filter-btn px-6 py-3 rounded-lg text-sm font-medium bg-white text-gray-700 border hover:bg-gray-50" 
                  data-type="service">
            Services
          </button>
          <button class="type-filter-btn px-6 py-3 rounded-lg text-sm font-medium bg-white text-gray-700 border hover:bg-gray-50" 
                  data-type="resource">
            Resources
          </button>
        </div>
      </div>

      <!-- Tag Filter -->
      <div class="mb-8 text-center">
        <div class="flex flex-wrap justify-center gap-2">
          <button class="tag-filter-btn active px-4 py-2 rounded-full text-sm font-medium bg-orange-600 text-white" 
                  data-tag="all">
            All Tags
          </button>
          {allTags.map(tag => (
            <button class="tag-filter-btn px-4 py-2 rounded-full text-sm font-medium bg-white text-gray-700 border hover:bg-gray-50" 
                    data-tag={tag}>
              {tag}
            </button>
          ))}
        </div>
      </div>

      <!-- Services Grid -->
      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8" id="services-grid">
        {services.map((service) => (
          <div class="service-card bg-white p-6 rounded-lg shadow-sm border hover:shadow-md transition-shadow" 
               data-tags={service.data.tags.join(' ')}
               data-type={service.data.type}>
            <div class="flex justify-between items-start mb-4">
              <div>
                <h3 class="text-xl font-semibold text-gray-900">{service.data.title}</h3>
                <span class={`inline-block px-2 py-1 text-xs font-medium rounded-full mt-1 ${
                  service.data.type === 'resource' 
                    ? 'bg-green-100 text-green-800' 
                    : 'bg-blue-100 text-blue-800'
                }`}>
                  {service.data.type === 'resource' ? 'Resource' : 'Service'}
                </span>
              </div>
            </div>
            
            <p class="text-gray-600 mb-4">{service.data.description}</p>
            
            <div class="space-y-2 mb-6">
              <div class="flex justify-between text-sm">
                <span class="text-gray-500">Time estimate:</span>
                <span class="font-medium">{service.data.estimated_hours}</span>
              </div>
            </div>

            {service.data.tags && (
              <div class="mb-4">
                <div class="flex flex-wrap gap-2">
                  {service.data.tags.map(tag => (
                    <span class="px-2 py-1 bg-gray-100 text-gray-600 text-xs rounded">
                      {tag}
                    </span>
                  ))}
                </div>
              </div>
            )}

            <div class="pt-4 border-t">
              <a href={`${import.meta.env.BASE_URL}/services/${service.slug}`} 
                 class="text-orange-600 font-medium hover:text-orange-700">
                Learn more â†’
              </a>
            </div>
          </div>
        ))}
      </div>

      <!-- Call to Action -->
      <div class="text-center mt-16">
        <div class="bg-white p-8 rounded-lg shadow-sm border">
          <h2 class="text-2xl font-bold text-gray-900 mb-4">
            Ready to get help for your project?
          </h2>
          <p class="text-gray-600 mb-6">
            Create a wishlist with the services you need and share it with your community
          </p>
          <a href={`${import.meta.env.BASE_URL}/submit`} 
             class="bg-blue-600 text-white px-8 py-3 rounded-lg font-semibold hover:bg-blue-700 transition-colors">
            Create Your Wishlist
          </a>
        </div>
      </div>
    </div>
  </section>
</Layout>

<script>
  // Dual filtering (type and tag)
  document.addEventListener('DOMContentLoaded', function() {
    const typeFilterButtons = document.querySelectorAll('.type-filter-btn');
    const tagFilterButtons = document.querySelectorAll('.tag-filter-btn');
    const serviceCards = document.querySelectorAll('.service-card');
    
    let currentType = 'all';
    let currentTag = 'all';

    function filterCards() {
      serviceCards.forEach(card => {
        const cardType = card.getAttribute('data-type');
        const cardTags = card.getAttribute('data-tags');
        
        const typeMatch = currentType === 'all' || cardType === currentType;
        const tagMatch = currentTag === 'all' || cardTags.includes(currentTag);
        
        if (typeMatch && tagMatch) {
          card.style.display = 'block';
        } else {
          card.style.display = 'none';
        }
      });
    }

    // Type filtering
    typeFilterButtons.forEach(button => {
      button.addEventListener('click', () => {
        currentType = button.getAttribute('data-type');
        
        // Update active button
        typeFilterButtons.forEach(btn => {
          btn.classList.remove('active', 'bg-blue-600', 'text-white');
          btn.classList.add('bg-white', 'text-gray-700');
        });
        button.classList.add('active', 'bg-blue-600', 'text-white');
        button.classList.remove('bg-white', 'text-gray-700');
        
        filterCards();
      });
    });

    // Tag filtering
    tagFilterButtons.forEach(button => {
      button.addEventListener('click', () => {
        currentTag = button.getAttribute('data-tag');
        
        // Update active button
        tagFilterButtons.forEach(btn => {
          btn.classList.remove('active', 'bg-orange-600', 'text-white');
          btn.classList.add('bg-white', 'text-gray-700');
        });
        button.classList.add('active', 'bg-orange-600', 'text-white');
        button.classList.remove('bg-white', 'text-gray-700');
        
        filterCards();
      });
    });
  });
</script>